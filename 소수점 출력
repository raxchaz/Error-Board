
<문제>

실수값 n을 하나 입력받아 소수점 둘째자리까지 반올림하여 출력하는 프로그램을 작성

입력 형식
첫 번째 줄에는 n이 주어집니다.
0 ≤ n ≤ 50

출력 형식
입력받은 실수값을 소수점 둘째자리까지 반올림하여 출력합니다.



[오류가 가득한 내 코드]
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        Double = sc.nextDouble();
        System.out.println(a);
    }
}



변수 이름 오류 // [in 7]
: Double은 클래스 이름이며, 변수 이름으로 사용될 수 없습니다.
변수 이름은 소문자로 시작해야 합니다.
따라서 Double을 적절한 변수 이름으로 변경해야 합니다.


>> 수정본

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        double number = sc.nextDouble();

        System.out.println(number);
    }
}



변수가 선언되지 않음 [in 8]
: 변수 a가 선언되지 않고 사용되고 있습니다.
코드에서는 a 변수를 사용하기 전에 선언해야 합니다.

>> 수정본

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        double number = sc.nextDouble();

        System.out.println(number);
    }
}



[최종 수정본]

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // 변수 선언
        double n;

        // 입력
        n = sc.nextDouble();

        // 출력
        System.out.printf("%.2f", n);
    }
}
 
 
#### "%.2f"
%.2f는 C 스타일의 형식 지정자(format specifier)로,
부동소수점 숫자를 출력할 때 소수점 이하 자릿수를 지정하는 용도

%는 형식 지정자의 시작을 나타내는 기호
.2는 소수점 이하 자릿수를 나타내며, 소수점 이하 2자리까지 출력하도록 지정
3 / 4 / 5로 변경 시 그만큼까지 나타낼 수 있다.

-------------------------------------------------------------------------

[Example Code]

double number = 3.141592;
System.out.printf("원주율: %.2f", number);

[result]
원주율: 3.14

--------------------------------------------------------------------------

Printf
형식화된 출력
: 특정 형식에 맞추어 데이터를 출력해야 할 때 printf를 사용
예를 들어, 소수점 자릿수 제한, 날짜와 시간을 원하는 형식으로 출력


다양한 형식의 조합 출력
: printf를 사용하면 문자열, 숫자, 날짜, 불리언 등 다양한 형식의 데이터를 조합하여 출력할 수 있다. 
예를 들어, 여러 개의 변수 값을 동시에 출력하거나, 정렬된 테이블 형태로 데이터를 출력하는 등의 작업을 수행할 수 있다.


public class Main {
    public static void main(String[] args) {
        String name = "Alice";
        int age = 25;
        double height = 165.5;

        System.out.printf("이름: %s, 나이: %d세, 키: %.1fcm", name, age, height);
    }
}


디버깅 및 로깅
: printf는 디버깅 시에 유용하게 사용
중간 단계의 변수 값 확인, 특정 조건이 충족될 때 메시지 출력

= printf 메서드는 System.out 객체에서 사용하며, 형식 문자열과 필요에 따라 추가 인수를 전달하여 사용한다.또, 형식 문자열에는 % 기호와 형식 지정자를 사용하여 출력 형식을 지정할 수 있다.
